name: deploy-smarterasp-msdeploy
on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Publish (self-contained win-x64)
        run: dotnet publish src/ScottMo.Web/ScottMo.Web.csproj -c Release -o publish -r win-x64 --self-contained true /p:PublishReadyToRun=true

      - name: Ensure stdout log folder exists
        shell: pwsh
        run: New-Item -ItemType Directory -Path "publish/logs" -Force | Out-Null

      - name: Inject env vars into web.config
        shell: pwsh
        run: |
          $web = "publish/web.config"
          [xml]$x = Get-Content $web
          $ancm = $x.configuration.'system.webServer'.aspNetCore
          if (-not $ancm){throw "aspNetCore element not found in web.config"}
          $envs = $ancm.environmentVariables
          if (-not $envs){$envs = $x.CreateElement("environmentVariables"); $ancm.AppendChild($envs) | Out-Null}
          foreach($n in @($envs.environmentVariable)){
            if($n.name -in @("ConnectionStrings__Default","DOTNET_SYSTEM_GLOBALIZATION_INVARIANT")){$envs.RemoveChild($n)|Out-Null}
          }
          $add = $x.CreateElement("environmentVariable"); $add.SetAttribute("name","ConnectionStrings__Default"); $add.SetAttribute("value","${{ secrets.SASP_DB_CONNSTR }}"); $envs.AppendChild($add)|Out-Null
          $glob = $x.CreateElement("environmentVariable"); $glob.SetAttribute("name","DOTNET_SYSTEM_GLOBALIZATION_INVARIANT"); $glob.SetAttribute("value","false"); $envs.AppendChild($glob)|Out-Null
          $x.Save($web)

      - name: Add deploy marker to wwwroot
        shell: pwsh
        run: |
          $sha = "${{ github.sha }}".Substring(0,7)
          New-Item -ItemType Directory -Path "publish/wwwroot" -Force | Out-Null
          Set-Content -Path "publish/wwwroot/version.txt" -Value "deployed $((Get-Date).ToString('u')) / $sha"

      - name: Install Web Deploy
        shell: pwsh
        run: choco install webdeploy -y --no-progress

      - name: MSDeploy sync
        shell: pwsh
        run: |
          $url  = "${{ secrets.SASP_MSDEPLOY_URL }}"
          $user = "${{ secrets.SASP_MSDEPLOY_USER }}"
          $pwd  = "${{ secrets.SASP_MSDEPLOY_PWD }}"
          $msdeploy = "C:\Program Files\IIS\Microsoft Web Deploy V3\msdeploy.exe"
          $srcPath  = (Resolve-Path "publish").Path
          & $msdeploy `
            "-verb:sync" `
            "-source:contentPath=$srcPath" `
            "-dest:contentPath=smontgomery-001-site1,computerName=$url,userName=$user,password=$pwd,authType=Basic" `
            "-enableRule:AppOffline" `
            "-enableRule:DoNotDeleteRule" `
            "-allowUntrusted" `
            "-retryAttempts:3" `
            "-retryInterval:5000"
