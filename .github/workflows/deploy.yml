name: deploy
on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Restore
        run: dotnet restore src/ScottMo.Web/ScottMo.Web.csproj

      - name: Publish (self-contained for win-x86 IIS)
        run: dotnet publish src/ScottMo.Web/ScottMo.Web.csproj -c Release -o publish -r win-x86 --self-contained true /p:PublishReadyToRun=true

      - name: Inject connection string into web.config
        shell: pwsh
        run: |
          $web = "publish/web.config"
          if (-not (Test-Path $web)) { throw "web.config not found at $web" }
          [xml]$x = Get-Content $web
          $sw = $x.configuration.'system.webServer'
          if (-not $sw) { throw "system.webServer not found in web.config" }
          $ancm = $sw.aspNetCore
          if (-not $ancm) { $ancm = $x.CreateElement("aspNetCore"); $sw.AppendChild($ancm) | Out-Null }
          $envs = $ancm.environmentVariables
          if (-not $envs) { $envs = $x.CreateElement("environmentVariables"); $ancm.AppendChild($envs) | Out-Null }
          foreach ($n in @($envs.environmentVariable)) { if ($n.name -eq "Default__ConnectionString") { $envs.RemoveChild($n) | Out-Null } }
          $e = $x.CreateElement("environmentVariable")
          $e.SetAttribute("name","Default__ConnectionString")
          $e.SetAttribute("value","${{ secrets.GD_DB_CONNSTR }}")
          $envs.AppendChild($e) | Out-Null
          $x.Save($web)

      - name: Add deploy marker
        shell: pwsh
        run: |
          $sha = "${{ github.sha }}".Substring(0,7)
          Set-Content -Path "publish/version.txt" -Value "deployed $((Get-Date).ToString('u')) / $sha"

      - name: FTP Deploy (implicit FTPS; clean slate; keep /Downloads)
        uses: SamKirkland/FTP-Deploy-Action@v4.3.6
        with:
          server: ${{ secrets.GD_FTPS_SERVER }}
          username: ${{ secrets.GD_FTPS_USER }}
          password: ${{ secrets.GD_FTPS_PASSWORD }}
          protocol: ftps-legacy       # implicit FTPS is stabler on many Plesk hosts
          port: 990
          security: loose
          timeout: 120000
          local-dir: "publish/"
          server-dir: "/httpdocs/"    # <-- absolute path to the public web root
          exclude: |
            Downloads/**
            **/Downloads/**
          dangerous-clean-slate: true  # wipe old files in /httpdocs (but not Downloads)
          log-level: "verbose"
          state-name: ".ftp-deploy-sync-state.json"
